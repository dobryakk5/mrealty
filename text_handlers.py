# text_handlers.py
from aiogram.types import Message, BufferedInputFile
from listings_processor import export_listings_to_excel, generate_html_gallery, generate_html_gallery_embedded, extract_urls
import io

async def handle_text_message(message: Message):
    text = message.text.strip()
    is_selection_request = "–ø–æ–¥–±–æ—Ä" in text.lower()
    use_embedded = "–ø–æ–¥–±–æ—Ä" in text.lower() and "–ø–æ–¥–±–æ—Ä-" not in text.lower()  # "–ø–æ–¥–±–æ—Ä" = –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ, "–ø–æ–¥–±–æ—Ä-" = –æ–±—ã—á–Ω—ã–µ
    urls, url_count = extract_urls(text)

    if url_count == 0:
        await message.answer("üìã –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è CIAN –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n\n"
                             "üí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Excel-–æ—Ç—á–µ—Ç–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏.\n"
                             "üñºÔ∏è –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞–ø–∏—à–∏—Ç–µ '–ø–æ–¥–±–æ—Ä' + —Å—Å—ã–ª–∫–∏.\n"
                             "üîó –î–ª—è –æ–±—ã—á–Ω—ã—Ö —Å—Å—ã–ª–æ–∫: '–ø–æ–¥–±–æ—Ä-' + —Å—Å—ã–ª–∫–∏.")
        return

    await message.answer(f"üîç –ù–∞–π–¥–µ–Ω–æ {url_count} —Å—Å—ã–ª–æ–∫. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")

    try:
        if is_selection_request:
            subtitle = None
            if "–ø–æ–¥–±–æ—Ä" in text.lower():
                podbor_pos = text.lower().find("–ø–æ–¥–±–æ—Ä")
                text_after_podbor = text[podbor_pos + 6:].strip()
                first_url_pos = -1
                for url in urls:
                    pos = text_after_podbor.find(url)
                    if pos != -1:
                        first_url_pos = pos
                        break
                if first_url_pos != -1:
                    subtitle = text_after_podbor[:first_url_pos].strip()
                else:
                    subtitle = text_after_podbor
                if subtitle:
                    subtitle = subtitle.replace("–ø–æ–¥–±–æ—Ä", "").replace("–ø–æ–¥–±–æ—Ä-", "").strip()

            if use_embedded:
                await message.answer("üîó –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–¥–±–æ—Ä —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏...")
                html_content = generate_html_gallery_embedded(urls, message.from_user.id, subtitle)
                filename = f"–ø–æ–¥–±–æ—Ä_–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ_—Ñ–æ—Ç–æ_{message.from_user.id}.html"
                caption = f"üè† –ü–æ–¥–±–æ—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {url_count}\nüìÅ –§–æ—Ä–º–∞—Ç: HTML —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"
            else:
                await message.answer("üñºÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–¥–±–æ—Ä —Å –æ–±—ã—á–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–æ—Ç–æ...")
                html_content = generate_html_gallery(urls, message.from_user.id, subtitle)
                filename = f"–ø–æ–¥–±–æ—Ä_–æ–±—ã—á–Ω—ã–µ_—Å—Å—ã–ª–∫–∏_{message.from_user.id}.html"
                caption = f"üè† –ü–æ–¥–±–æ—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (–æ–±—ã—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏)\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {url_count}\nüìÅ –§–æ—Ä–º–∞—Ç: HTML (–æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)"

            html_file = io.BytesIO(html_content.encode('utf-8'))
            html_file.name = filename
            input_file = BufferedInputFile(html_file.getvalue(), filename=filename)
            await message.answer_document(input_file, caption=caption)

        else:
            await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é Excel-–æ—Ç—á–µ—Ç...")
            excel_file, request_id = await export_listings_to_excel(urls, message.from_user.id)
            input_file = BufferedInputFile(excel_file.getvalue(), filename=f"–æ—Ç—á–µ—Ç_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏_{message.from_user.id}.xlsx")
            await message.answer_document(input_file, caption=f"üìä –û—Ç—á–µ—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏\n"
                                                             f"üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {url_count}\n"
                                                             f"üÜî ID –∑–∞–ø—Ä–æ—Å–∞: {request_id}\n"
                                                             f"üìÅ –§–æ—Ä–º–∞—Ç: Excel")

    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {str(e)}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        print(f"–û—à–∏–±–∫–∞ –≤ handle_text_message: {e}")
