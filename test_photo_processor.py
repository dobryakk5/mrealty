#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è photo_processor
"""

from photo_processor import photo_processor

def test_photo_processor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ photo_processor"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É—é —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å photo_processor...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    test_photo_urls = [
        "https://images.cdn-cian.ru/images/kvartira-sosenskoe-kuprina-prospekt-2571476328-1.jpg",
        "https://images.cdn-cian.ru/images/kvartira-buninskie-kvartaly-2571494327-1.jpg",
        "https://images.cdn-cian.ru/images/kvartira-sosenskoe-kuprina-prospekt-2571512755-1.jpg"
    ]
    
    print(f"üì∏ –¢–µ—Å—Ç–∏—Ä—É—é —Å {len(test_photo_urls)} —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏")
    
    try:
        # –¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ HTML (base64)
        print("\nüîó –¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ HTML")
        print("‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è...")
        embedded_photos = photo_processor.process_photos_for_embedded_html(test_photo_urls)
        print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è: {len(embedded_photos)}")
        
        for photo in embedded_photos:
            print(f"  –§–æ—Ç–æ {photo['index']}: {photo['type']}")
            if photo['type'] == 'base64':
                print(f"    MIME: {photo['mime_type']}, –†–∞–∑–º–µ—Ä: {photo['size']} –±–∞–π—Ç")
        
        # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Å–µ—Ç–∫–∏ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
        print("\nüîß –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Å–µ—Ç–∫–∏ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ")
        photo_grid_html = photo_processor.generate_photo_grid_html(embedded_photos, 'embedded')
        print(f"HTML —Å–µ—Ç–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω, —Ä–∞–∑–º–µ—Ä: {len(photo_grid_html)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Å–µ—Ç–∫–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
        print("\nüñºÔ∏è –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Å–µ—Ç–∫–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")
        url_photos = [{'url': url, 'index': i+1, 'type': 'url'} for i, url in enumerate(test_photo_urls)]
        url_grid_html = photo_processor.generate_photo_grid_html(url_photos, 'url')
        print(f"HTML —Å–µ—Ç–∫–∏ –¥–ª—è —Å—Å—ã–ª–æ–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω, —Ä–∞–∑–º–µ—Ä: {len(url_grid_html)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ HTML
        print("\nüìÑ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ HTML")
        if 'photo-grid' in photo_grid_html:
            print("‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å 'photo-grid'")
        if 'photo-item' in photo_grid_html:
            print("‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å 'photo-item'")
        if 'img' in photo_grid_html:
            print("‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–≥–∏ 'img'")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_photo_processor()
