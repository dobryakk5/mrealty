#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –¶–ò–ê–ù
"""

from watermark_remover import watermark_remover
import cv2
import numpy as np
import requests

def test_improved_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è"""
    
    print("üß™ –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –¶–ò–ê–ù")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    test_urls = [
        "https://images.cdn-cian.ru/images/2504097329-1.jpg",
        "https://images.cdn-cian.ru/images/2504097383-1.jpg"
    ]
    
    for i, url in enumerate(test_urls):
        print(f"\nüì∏ –¢–µ—Å—Ç–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {i+1}: {url}")
        print("-" * 50)
        
        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            response = requests.get(url, timeout=10)
            response.raise_for_status()
            image_data = response.content
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ numpy array
            nparr = np.frombuffer(image_data, np.uint8)
            image = cv2.imdecode(nparr, cv2.IMREAD_COLOR)
            
            if image is None:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
                continue
            
            height, width = image.shape[:2]
            print(f"üìè –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {width} x {height}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º
            print("\nüîç –¢–µ—Å—Ç–∏—Ä—É—é —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è...")
            watermark_region = watermark_remover.detect_cian_watermark_region(image)
            
            if watermark_region:
                x1, y1, x2, y2 = watermark_region
                region_width = x2 - x1
                region_height = y2 - y1
                
                print(f"‚úÖ –û–±–ª–∞—Å—Ç—å –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞:")
                print(f"   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({x1}, {y1}) - ({x2}, {y2})")
                print(f"   –†–∞–∑–º–µ—Ä –æ–±–ª–∞—Å—Ç–∏: {region_width} x {region_height} –ø–∏–∫—Å–µ–ª–µ–π")
                print(f"   –ü–æ–∑–∏—Ü–∏—è: –ø—Ä–∞–≤–∞—è –Ω–∏–∂–Ω—è—è —á–∞—Å—Ç—å")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–ª–∞—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ –ø—Ä–∞–≤–æ–π –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏
                right_quarter = width * 0.75
                bottom_quarter = height * 0.75
                
                if x1 > right_quarter and y1 > bottom_quarter:
                    print("‚úÖ –û–±–ª–∞—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –≤ –ø—Ä–∞–≤–æ–π –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏")
                else:
                    print("‚ö†Ô∏è –û–±–ª–∞—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –Ω–µ –≤ —Ç–æ–º –º–µ—Å—Ç–µ")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–±–ª–∞—Å—Ç–∏
                expected_width = width * 0.25
                expected_height = height * 0.18
                
                width_ratio = region_width / expected_width
                height_ratio = region_height / expected_height
                
                print(f"üìä –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤:")
                print(f"   –®–∏—Ä–∏–Ω–∞: {width_ratio:.2f}x –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π")
                print(f"   –í—ã—Å–æ—Ç–∞: {height_ratio:.2f}x –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π")
                
                if 0.5 < width_ratio < 2.0 and 0.5 < height_ratio < 2.0:
                    print("‚úÖ –†–∞–∑–º–µ—Ä—ã –æ–±–ª–∞—Å—Ç–∏ –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö")
                else:
                    print("‚ö†Ô∏è –†–∞–∑–º–µ—Ä—ã –æ–±–ª–∞—Å—Ç–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏")
                    
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–±–ª–∞—Å—Ç—å –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    print("\n" + "=" * 70)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_visualization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π"""
    
    print("\n\nüé® –¢–µ—Å—Ç –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π")
    print("=" * 70)
    
    url = "https://images.cdn-cian.ru/images/2504097329-1.jpg"
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        image_data = response.content
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ numpy array
        nparr = np.frombuffer(image_data, np.uint8)
        image = cv2.imdecode(nparr, cv2.IMREAD_COLOR)
        
        if image is None:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±–ª–∞—Å—Ç—å –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞
        watermark_region = watermark_remover.detect_cian_watermark_region(image)
        
        if watermark_region:
            x1, y1, x2, y2 = watermark_region
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
            vis_image = image.copy()
            
            # –†–∏—Å—É–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–æ–∫—Ä—É–≥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
            cv2.rectangle(vis_image, (x1, y1), (x2, y2), (0, 255, 0), 3)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
            cv2.putText(vis_image, f"Watermark: ({x1},{y1})-({x2},{y2})", 
                       (x1, y1-10), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            output_filename = "watermark_detection_visualization.jpg"
            cv2.imwrite(output_filename, vis_image)
            
            print(f"‚úÖ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {output_filename}")
            print(f"üîç –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–±–ª–∞—Å—Ç—å –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    test_improved_detection()
    test_visualization()
