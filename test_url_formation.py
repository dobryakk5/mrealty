#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL –ø–æ–∏—Å–∫–∞
"""

from parse_cian_to_db import (
    parse_params_string, 
    convert_time_period, 
    build_search_url
)

def test_url_formation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ URL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL –ø–æ–∏—Å–∫–∞")
    print("=" * 60)
    
    test_cases = [
        "1d",           # –≤—Ç–æ—Ä–∏—á–∫–∞ –∑–∞ –¥–µ–Ω—å
        "2w",           # –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏ –∑–∞ –Ω–µ–¥–µ–ª—é
        "1h",           # –≤—Ç–æ—Ä–∏—á–∫–∞ –∑–∞ —á–∞—Å
        "2none",        # –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        "1",            # —Ç–æ–ª—å–∫–æ —Ç–∏–ø (–≤—Ç–æ—Ä–∏—á–∫–∞)
        "d",            # —Ç–æ–ª—å–∫–æ –ø–µ—Ä–∏–æ–¥ (–¥–µ–Ω—å)
    ]
    
    for params in test_cases:
        print(f"\nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        
        # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        property_type, time_period = parse_params_string(params)
        print(f"   –¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: {property_type} ({'–≤—Ç–æ—Ä–∏—á–∫–∞' if property_type == 1 else '–Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏'})")
        print(f"   –ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏: {time_period}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥
        time_period_seconds = convert_time_period(time_period)
        print(f"   –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {time_period_seconds}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL
        url = build_search_url(property_type, time_period_seconds)
        print(f"   URL: {url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ totime
        if time_period_seconds is not None:
            if f"&totime={time_period_seconds}" in url:
                print(f"   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä totime={time_period_seconds} –Ω–∞–π–¥–µ–Ω –≤ URL")
            else:
                print(f"   ‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä totime={time_period_seconds} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ URL")
        else:
            if "&totime=" not in url:
                print(f"   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä totime –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (—Ñ–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª—é—á–µ–Ω)")
            else:
                print(f"   ‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä totime –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ö–æ—Ç—è –¥–æ–ª–∂–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å")
        
        print("-" * 60)

def test_specific_case_1d():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–ª—É—á–∞–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º 1d"""
    print("\nüéØ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ '1d'")
    print("=" * 60)
    
    # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    property_type, time_period = parse_params_string("1d")
    print(f"–ü–∞—Ä—Å–∏–Ω–≥ '1d':")
    print(f"   property_type = {property_type}")
    print(f"   time_period = {time_period}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥
    time_period_seconds = convert_time_period(time_period)
    print(f"–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è '{time_period}' -> {time_period_seconds}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL
    url = build_search_url(property_type, time_period_seconds)
    print(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL:")
    print(f"   {url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ totime=-2
    if "&totime=-2" in url:
        print("‚úÖ URL —Å–æ–¥–µ—Ä–∂–∏—Ç &totime=-2 (—Ñ–∏–ª—å—Ç—Ä '–∑–∞ –¥–µ–Ω—å')")
    else:
        print("‚ùå URL –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç &totime=-2")
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º URL –Ω–∞ —á–∞—Å—Ç–∏
    print(f"\n–†–∞–∑–±–æ—Ä URL:")
    parts = url.split("&")
    for part in parts:
        if part.startswith("totime="):
            print(f"   {part} ‚Üê —ç—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤—Ä–µ–º–µ–Ω–∏")
        elif part.startswith("object_type"):
            print(f"   {part} ‚Üê —ç—Ç–æ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
        else:
            print(f"   {part}")

if __name__ == '__main__':
    test_url_formation()
    test_specific_case_1d()
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
